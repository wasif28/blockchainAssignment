/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Counter, CounterInterface } from "../Counter";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "word",
        type: "string",
      },
    ],
    name: "WordAdded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "word",
        type: "string",
      },
    ],
    name: "addWord",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getWordCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "startIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endIndex",
        type: "uint256",
      },
    ],
    name: "getWords",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060006040518060600160405280603d815260200162000c60603d9139905060006200003d82620000ad565b905060005b8151811015620000a4576000828281518110620000635762000063620003de565b602090810291909101810151825460018101845560009384529190922001906200008e908262000499565b50806200009b816200057b565b91505062000042565b505050620005c9565b6060816000805b82518110156200012a576040805180820190915260018152600160fd1b60209091018190528351849083908110620000f057620000f0620003de565b01602001516001600160f81b0319160362000115578162000111816200057b565b9250505b8062000121816200057b565b915050620000b4565b5060006200013a82600162000597565b6001600160401b03811115620001545762000154620003f4565b6040519080825280602002602001820160405280156200018957816020015b6060815260200190600190039081620001735790505b50905060008060005b855181101562000250576040805180820190915260018152600160fd1b60209091018190528651879083908110620001ce57620001ce620003de565b01602001516001600160f81b031916036200023b57620001fc8884620001f6600185620005b3565b62000292565b848381518110620002115762000211620003de565b60209081029190910101526200022981600162000597565b92508162000237816200057b565b9250505b8062000247816200057b565b91505062000192565b5062000267878360018851620001f69190620005b3565b8382815181106200027c576200027c620003de565b6020908102919091010152509095945050505050565b606083828411801590620002a65750805183105b620002f75760405162461bcd60e51b815260206004820152601960248201527f496e76616c696420737562737472696e6720696e646963657300000000000000604482015260640160405180910390fd5b6000620003058585620005b3565b6200031290600162000597565b6001600160401b038111156200032c576200032c620003f4565b6040519080825280601f01601f19166020018201604052801562000357576020820181803683370190505b509050845b848111620003d457828181518110620003795762000379620003de565b01602001516001600160f81b03191682620003958884620005b3565b81518110620003a857620003a8620003de565b60200101906001600160f81b031916908160001a90535080620003cb816200057b565b9150506200035c565b5095945050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200041f57607f821691505b6020821081036200044057634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200049457600081815260208120601f850160051c810160208610156200046f5750805b601f850160051c820191505b8181101562000490578281556001016200047b565b5050505b505050565b81516001600160401b03811115620004b557620004b5620003f4565b620004cd81620004c684546200040a565b8462000446565b602080601f831160018114620005055760008415620004ec5750858301515b600019600386901b1c1916600185901b17855562000490565b600085815260208120601f198616915b82811015620005365788860151825594840194600190910190840162000515565b5085821015620005555787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b60006001820162000590576200059062000565565b5060010190565b80820180821115620005ad57620005ad62000565565b92915050565b81810381811115620005ad57620005ad62000565565b61068780620005d96000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630ce5a098146100465780634974da811461005c578063edc35fec14610071575b600080fd5b6000546040519081526020015b60405180910390f35b61006f61006a366004610308565b610091565b005b61008461007f3660046103b9565b610154565b6040516100539190610421565b60008151116100e05760405162461bcd60e51b8152602060048201526016602482015275576f7264206d757374206e6f7420626520656d70747960501b60448201526064015b60405180910390fd5b600080546001810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56301610119828261050c565b507fa8a13d5362cedeaaf8906a83b0afcab2c07c8bdac8a04ed19d273c4307f260bd8160405161014991906105cc565b60405180910390a150565b606060005482106101995760405162461bcd60e51b815260206004820152600f60248201526e496e76616c696420696e646963657360881b60448201526064016100d7565b60006101a584846105fc565b6101b090600161060f565b67ffffffffffffffff8111156101c8576101c86102f2565b6040519080825280602002602001820160405280156101fb57816020015b60608152602001906001900390816101e65790505b509050835b8381116102e8576000818154811061021a5761021a610622565b90600052602060002001805461022f90610483565b80601f016020809104026020016040519081016040528092919081815260200182805461025b90610483565b80156102a85780601f1061027d576101008083540402835291602001916102a8565b820191906000526020600020905b81548152906001019060200180831161028b57829003601f168201915b50505050508286836102ba91906105fc565b815181106102ca576102ca610622565b602002602001018190525080806102e090610638565b915050610200565b5090505b92915050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561031a57600080fd5b813567ffffffffffffffff8082111561033257600080fd5b818401915084601f83011261034657600080fd5b813581811115610358576103586102f2565b604051601f8201601f19908116603f01168101908382118183101715610380576103806102f2565b8160405282815287602084870101111561039957600080fd5b826020860160208301376000928101602001929092525095945050505050565b600080604083850312156103cc57600080fd5b50508035926020909101359150565b6000815180845260005b81811015610401576020818501810151868301820152016103e5565b506000602082860101526020601f19601f83011685010191505092915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561047657603f198886030184526104648583516103db565b94509285019290850190600101610448565b5092979650505050505050565b600181811c9082168061049757607f821691505b6020821081036104b757634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561050757600081815260208120601f850160051c810160208610156104e45750805b601f850160051c820191505b81811015610503578281556001016104f0565b5050505b505050565b815167ffffffffffffffff811115610526576105266102f2565b61053a816105348454610483565b846104bd565b602080601f83116001811461056f57600084156105575750858301515b600019600386901b1c1916600185901b178555610503565b600085815260208120601f198616915b8281101561059e5788860151825594840194600190910190840161057f565b50858210156105bc5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6020815260006105df60208301846103db565b9392505050565b634e487b7160e01b600052601160045260246000fd5b818103818111156102ec576102ec6105e6565b808201808211156102ec576102ec6105e6565b634e487b7160e01b600052603260045260246000fd5b60006001820161064a5761064a6105e6565b506001019056fea26469706673582212202cd167fab5194c703ec904b0576a0be96380cf9e77716d736d1f3c2aa9e5cdaf64736f6c634300081500334c6f72656d20697073756d20646f6c6f722073697420616d657420636f6e73656374657475722061646970697363696e6720656c69742073656420646f";

type CounterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CounterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Counter__factory extends ContractFactory {
  constructor(...args: CounterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Counter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Counter__factory {
    return super.connect(runner) as Counter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CounterInterface {
    return new Interface(_abi) as CounterInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Counter {
    return new Contract(address, _abi, runner) as unknown as Counter;
  }
}
